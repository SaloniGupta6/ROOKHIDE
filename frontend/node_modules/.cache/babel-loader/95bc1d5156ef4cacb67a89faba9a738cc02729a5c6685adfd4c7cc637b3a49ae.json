{"ast":null,"code":"var _jsxFileName = \"/Users/salonigupta/Desktop/ROOKHIDE_LOCAL/frontend/src/components/ChessVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chess from \"chess.js\"; // make sure chess.js is installed\nimport Chessboard from \"chessboardjsx\"; // or whatever chessboard lib you’re using\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessVisualizer = () => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [pgnText, setPgnText] = useState(\"\");\n\n  // Handle PGN file upload\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const text = e.target.result;\n      setPgnText(text);\n      const newGame = new Chess();\n      const success = newGame.load_pgn(text);\n      if (success) {\n        setGame(newGame);\n      } else {\n        alert(\"Invalid PGN file!\");\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Handle PGN textarea input\n  const handleTextChange = e => {\n    const text = e.target.value;\n    setPgnText(text);\n    const newGame = new Chess();\n    const success = newGame.load_pgn(text);\n    if (success) {\n      setGame(newGame);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Chess PGN Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pgn\",\n      onChange: handleFileUpload,\n      className: \"mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full border rounded p-2 mb-4\",\n      rows: 6,\n      placeholder: \"Paste PGN here...\",\n      value: pgnText,\n      onChange: handleTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {\n        position: game.fen(),\n        width: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessVisualizer, \"fX1PEP6qVWzupDQkk8EV2UtZ3Fo=\");\n_c = ChessVisualizer;\nexport default ChessVisualizer;\nvar _c;\n$RefreshReg$(_c, \"ChessVisualizer\");","map":{"version":3,"names":["React","useState","Chess","Chessboard","jsxDEV","_jsxDEV","ChessVisualizer","_s","game","setGame","pgnText","setPgnText","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","text","result","newGame","success","load_pgn","alert","readAsText","handleTextChange","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","rows","placeholder","position","fen","width","_c","$RefreshReg$"],"sources":["/Users/salonigupta/Desktop/ROOKHIDE_LOCAL/frontend/src/components/ChessVisualizer.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Chess from \"chess.js\"; // make sure chess.js is installed\nimport Chessboard from \"chessboardjsx\"; // or whatever chessboard lib you’re using\n\nconst ChessVisualizer = () => {\n  const [game, setGame] = useState(new Chess());\n  const [pgnText, setPgnText] = useState(\"\");\n\n  // Handle PGN file upload\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const text = e.target.result;\n      setPgnText(text);\n\n      const newGame = new Chess();\n      const success = newGame.load_pgn(text);\n      if (success) {\n        setGame(newGame);\n      } else {\n        alert(\"Invalid PGN file!\");\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Handle PGN textarea input\n  const handleTextChange = (e) => {\n    const text = e.target.value;\n    setPgnText(text);\n\n    const newGame = new Chess();\n    const success = newGame.load_pgn(text);\n    if (success) {\n      setGame(newGame);\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl font-bold mb-4\">Chess PGN Visualizer</h2>\n\n      {/* File upload */}\n      <input\n        type=\"file\"\n        accept=\".pgn\"\n        onChange={handleFileUpload}\n        className=\"mb-4\"\n      />\n\n      {/* PGN textarea */}\n      <textarea\n        className=\"w-full border rounded p-2 mb-4\"\n        rows={6}\n        placeholder=\"Paste PGN here...\"\n        value={pgnText}\n        onChange={handleTextChange}\n      />\n\n      {/* Chessboard */}\n      <div className=\"flex justify-center\">\n        <Chessboard\n          position={game.fen()}\n          width={400}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChessVisualizer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,UAAU,CAAC,CAAC;AAC9B,OAAOC,UAAU,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAIC,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEX,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,MAAMC,IAAI,GAAGD,CAAC,CAACL,MAAM,CAACO,MAAM;MAC5BX,UAAU,CAACU,IAAI,CAAC;MAEhB,MAAME,OAAO,GAAG,IAAIrB,KAAK,CAAC,CAAC;MAC3B,MAAMsB,OAAO,GAAGD,OAAO,CAACE,QAAQ,CAACJ,IAAI,CAAC;MACtC,IAAIG,OAAO,EAAE;QACXf,OAAO,CAACc,OAAO,CAAC;MAClB,CAAC,MAAM;QACLG,KAAK,CAAC,mBAAmB,CAAC;MAC5B;IACF,CAAC;IACDT,MAAM,CAACU,UAAU,CAACb,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMc,gBAAgB,GAAIR,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACL,MAAM,CAACc,KAAK;IAC3BlB,UAAU,CAACU,IAAI,CAAC;IAEhB,MAAME,OAAO,GAAG,IAAIrB,KAAK,CAAC,CAAC;IAC3B,MAAMsB,OAAO,GAAGD,OAAO,CAACE,QAAQ,CAACJ,IAAI,CAAC;IACtC,IAAIG,OAAO,EAAE;MACXf,OAAO,CAACc,OAAO,CAAC;IAClB;EACF,CAAC;EAED,oBACElB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA;MAAIyB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGhE9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,MAAM;MACbC,QAAQ,EAAE1B,gBAAiB;MAC3BkB,SAAS,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAGF9B,OAAA;MACEyB,SAAS,EAAC,gCAAgC;MAC1CS,IAAI,EAAE,CAAE;MACRC,WAAW,EAAC,mBAAmB;MAC/BX,KAAK,EAAEnB,OAAQ;MACf4B,QAAQ,EAAEV;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAGF9B,OAAA;MAAKyB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClC1B,OAAA,CAACF,UAAU;QACTsC,QAAQ,EAAEjC,IAAI,CAACkC,GAAG,CAAC,CAAE;QACrBC,KAAK,EAAE;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnEID,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AAqErB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}